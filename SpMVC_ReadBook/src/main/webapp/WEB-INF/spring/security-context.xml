<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd">
		<!-- authProvider에서 UserDetailService를 사용해야하기 때문에  -->
		<!-- 여기에 UserDetailService클래스가 있는 패키지를 스캔하도록 -->
		<context:component-scan base-package="com.biz.book.service.auth"/>
		<!-- 설정을 해주어야 한다. -->
		<!-- spring security에서 사용 할 AuthenticationProvider를 구현한 -->
		<!-- 클래스를 bean으로 등록  -->
		<bean id="customAuthProvider" class="com.biz.book.auth.AuthProviderImpl"/>
		<!-- 커스터마이징 된 AuthoProvider를 spring security에서 사용하도록 -->
		<!-- security:authentication-manager에 등록 -->
		<security:authentication-manager>
			<security:authentication-provider ref="customAuthProvider"/>
		</security:authentication-manager>
		
<!-- spring security의 핵심 설정 부분 -->
<!-- security:http -->
<!-- login form 설정 -->
<!-- login 방법 설정 -->
<!-- login이 되었을 때 인가, 권환에 관한 설정 -->
<!-- login이 되었을 때 URL패턴에 따라 접근 권한을 세밀하게 부여 할 수 있다-->
<!-- scurity:intercept기능이다 -->
<!-- 접근할  URL을 pattern속성에 지정하고 -->
<!-- 패턴 지정에서 주의 할 사항 -->
<!-- 패턴은 URL의 단계가 깊을수록 위쪽에 먼저 작성을 해주어야 한다 -->
<!-- 만약 user/**,user/a/b/c순서로 패턴이 있을 경우 user/a/b/c는 무시된다 -->
<!-- 이때는 user/a/b/c, user/** 순서로 패턴을 나열해야 한다 -->
<security:http auto-config="true" use-expressions="true">
	<security:form-login
		
		username-parameter="username"
		password-parameter="password"/>
	<security:logout logout-url="/logout"/>
	
	<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
	<security:intercept-url pattern="/member/mypage" access="hasAnyRole('ADMIN','USER')"/>
	<security:intercept-url pattern="/member/password" access="hasAnyRole('ADMIN','USER')"/>
	<security:intercept-url pattern="/member/**" access="hasAnyRole('ADMIN','USER')"/>
	<security:intercept-url pattern="/books/**" access="hasAnyRole('ADMIN','USER')"/>
	<security:intercept-url pattern="/**" access="permitAll()"/>
</security:http>

</beans>
